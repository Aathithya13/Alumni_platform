{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Selva\\\\OneDrive\\\\Desktop\\\\Alumini\\\\frontend\\\\client\\\\src\\\\components\\\\AllEvents.js\",\n  _s = $RefreshSig$();\n// components/AllEvents.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllEvents() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/allEvent');\n        setEvents(response.data);\n      } catch (err) {\n        setError('Error fetching events');\n      }\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [event.image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000/${event.image}`,\n            className: \"card-img-top\",\n            alt: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: event.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Date: \", new Date(event.date).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Location: \", event.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, event._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(AllEvents, \"x1Yh5or0Dkd1qx8VdFPykNLOoVk=\");\n_c = AllEvents;\nexport default AllEvents;\nvar _c;\n$RefreshReg$(_c, \"AllEvents\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","AllEvents","_s","events","setEvents","error","setError","fetchEvents","response","get","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","event","image","src","alt","title","description","Date","date","toLocaleDateString","location","_id","_c","$RefreshReg$"],"sources":["C:/Users/Selva/OneDrive/Desktop/Alumini/frontend/client/src/components/AllEvents.js"],"sourcesContent":["// components/AllEvents.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction AllEvents() {\r\n  const [events, setEvents] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/allEvent');\r\n        setEvents(response.data);\r\n      } catch (err) {\r\n        setError('Error fetching events');\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>All Events</h2>\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n      <div className=\"row\">\r\n        {events.map(event => (\r\n          <div className=\"col-md-4\" key={event._id}>\r\n            <div className=\"card\">\r\n              {event.image && <img src={`http://localhost:5000/${event.image}`} className=\"card-img-top\" alt={event.title} />}\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{event.title}</h5>\r\n                <p className=\"card-text\">{event.description}</p>\r\n                <p className=\"card-text\">Date: {new Date(event.date).toLocaleDateString()}</p>\r\n                <p className=\"card-text\">Location: {event.location}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllEvents;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}