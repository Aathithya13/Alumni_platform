{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Selva\\\\OneDrive\\\\Desktop\\\\Alumini\\\\frontend\\\\client\\\\src\\\\components\\\\Cate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cate = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [category, setCategory] = useState('Events');\n\n  // Fetch posts whenever the category changes\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/category?category=${category}`);\n        setPosts(response.data);\n      } catch (err) {\n        console.error(\"Error fetching posts:\", err);\n      }\n    };\n    fetchPosts();\n  }, [category]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCategory('Event'),\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCategory('Job'),\n        children: \"Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCategory('Internship'),\n        children: \"Internships\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCategory('News'),\n        children: \"News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/posts/${post.image}`,\n          alt: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.reference\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category: \", post.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", new Date(post.Date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts available for the selected category.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Cate, \"ZhpPxgt+6fCmsdLrOtIGDALVKbA=\");\n_c = Cate;\nexport default Cate;\nvar _c;\n$RefreshReg$(_c, \"Cate\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Cate","_s","posts","setPosts","category","setCategory","fetchPosts","response","get","data","err","console","error","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","src","image","alt","description","reference","Date","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["C:/Users/Selva/OneDrive/Desktop/Alumini/frontend/client/src/components/Cate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Cate = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [category, setCategory] = useState('Events'); \r\n\r\n    // Fetch posts whenever the category changes\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:5000/category?category=${category}`);\r\n                setPosts(response.data);\r\n            } catch (err) {\r\n                console.error(\"Error fetching posts:\", err);\r\n            }\r\n        };\r\n\r\n        fetchPosts();\r\n    }, [category]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"category-buttons\">\r\n                <button onClick={() => setCategory('Event')}>Events</button>\r\n                <button onClick={() => setCategory('Job')}>Jobs</button>\r\n                <button onClick={() => setCategory('Internship')}>Internships</button>\r\n                <button onClick={() => setCategory('News')}>News</button>\r\n            </div>\r\n\r\n            <div className=\"posts\">\r\n                {posts.length > 0 ? (\r\n                    posts.map(post => (\r\n                        <div key={post._id} className=\"post\">\r\n                            <img src={`http://localhost:5000/posts/${post.image}`} alt=\"Post\" />\r\n                            <h3>{post.description}</h3>\r\n                            <p>{post.reference}</p>\r\n                            <p>Category: {post.category}</p>\r\n                            <p>Date: {new Date(post.Date).toLocaleDateString()}</p>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>No posts available for the selected category.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cate;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}