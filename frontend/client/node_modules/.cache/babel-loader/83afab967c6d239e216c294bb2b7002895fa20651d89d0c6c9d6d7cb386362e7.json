{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Selva\\\\OneDrive\\\\Desktop\\\\Alumini\\\\frontend\\\\client\\\\src\\\\components\\\\AluLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"; // For redirect after login\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [variant, setVariant] = useState(\"\");\n  const navigate = useNavigate(); // useNavigate for redirection\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5000/login\", {\n        username,\n        password\n      });\n      if (response.data.error) {\n        // If the server returns an error message, display it\n        setMessage(response.data.error);\n        setVariant(\"danger\"); // Alert as danger for error\n      } else if (response.data.message) {\n        // Display success message if login is successful\n        setMessage(response.data.message);\n        setVariant(\"success\");\n\n        // Redirect to dashboard after successful login\n        setTimeout(() => {\n          navigate(\"/dashboard\");\n        }, 1000);\n      }\n    } catch (error) {\n      // Display error if something goes wrong in the login process\n      setMessage(\"An error occurred. Please try again.\");\n      setVariant(\"danger\");\n      console.error(\"Login error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: variant,\n      onClose: () => setMessage(\"\"),\n      dismissible: true,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formUsername\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formPassword\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Enter password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"mt-3\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"ktq7U71QFD/Xf4dX4yVKZEJ33wc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Form","Button","Alert","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","message","setMessage","variant","setVariant","navigate","handleSubmit","e","preventDefault","response","post","data","error","setTimeout","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClose","dismissible","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Selva/OneDrive/Desktop/Alumini/frontend/client/src/components/AluLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\"; // For redirect after login\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [variant, setVariant] = useState(\"\"); \r\n    const navigate = useNavigate(); // useNavigate for redirection\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await axios.post(\"http://localhost:5000/login\", {\r\n                username,\r\n                password,\r\n            });\r\n\r\n            if (response.data.error) {\r\n                // If the server returns an error message, display it\r\n                setMessage(response.data.error);\r\n                setVariant(\"danger\"); // Alert as danger for error\r\n            } else if (response.data.message) {\r\n                // Display success message if login is successful\r\n                setMessage(response.data.message); \r\n                setVariant(\"success\"); \r\n\r\n                // Redirect to dashboard after successful login\r\n                setTimeout(() => {\r\n                    navigate(\"/dashboard\");\r\n                }, 1000);\r\n            }\r\n        } catch (error) {\r\n            // Display error if something goes wrong in the login process\r\n            setMessage(\"An error occurred. Please try again.\");\r\n            setVariant(\"danger\");\r\n            console.error(\"Login error:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h2>Login</h2>\r\n\r\n            {/* Show alert message if available */}\r\n            {message && (\r\n                <Alert variant={variant} onClose={() => setMessage(\"\")} dismissible>\r\n                    {message}\r\n                </Alert>\r\n            )}\r\n\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group controlId=\"formUsername\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter username\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPassword\" className=\"mt-3\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Enter password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}