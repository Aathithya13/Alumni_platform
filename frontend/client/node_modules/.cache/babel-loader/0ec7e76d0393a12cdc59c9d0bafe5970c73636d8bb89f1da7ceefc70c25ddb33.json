{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Selva\\\\OneDrive\\\\Desktop\\\\Alumini\\\\frontend\\\\client\\\\src\\\\components\\\\EditPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditPost() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [description, setDescription] = useState('');\n  const [reference, setReference] = useState('');\n  const [image, setImage] = useState(null); // This will hold the uploaded image file\n  const [currentImage, setCurrentImage] = useState(''); // To display the current image\n  const navigate = useNavigate();\n  const handleImage = e => {\n    setImage(e.target.files[0]); // Set the new image file when selected\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/post/${id}`);\n        console.log(response.data.post);\n        setCurrentImage(response.data.post.image); // Set the current image path for display\n        setDescription(response.data.post.description);\n        setReference(response.data.post.reference);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n  }, [id]); // Add `id` to the dependency array\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('description', description);\n    formData.append('reference', reference);\n\n    // If a new image was selected, append it to the form data\n    if (image) {\n      formData.append('postImage', image);\n    }\n    try {\n      const response = await axios.post(`http://localhost:5000/edit/${id}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(response.data);\n      // Optionally navigate to the updated post or posts list\n      navigate(`/post/${id}`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        value: reference,\n        onChange: e => setReference(e.target.value),\n        placeholder: \"Reference Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), currentImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000/public/posts/${currentImage}`,\n        alt: \"Current Post\",\n        width: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(EditPost, \"dgq+M2sMOsDl2tmLjgs0din57uo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","axios","jsxDEV","_jsxDEV","EditPost","_s","id","description","setDescription","reference","setReference","image","setImage","currentImage","setCurrentImage","navigate","handleImage","e","target","files","fetchData","response","get","console","log","data","post","err","handleSubmit","preventDefault","formData","FormData","append","headers","children","onSubmit","type","value","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/Selva/OneDrive/Desktop/Alumini/frontend/client/src/components/EditPost.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction EditPost() {\r\n    const { id } = useParams();\r\n    const [description, setDescription] = useState('');\r\n    const [reference, setReference] = useState('');\r\n    const [image, setImage] = useState(null);  // This will hold the uploaded image file\r\n    const [currentImage, setCurrentImage] = useState('');  // To display the current image\r\n    const navigate = useNavigate();\r\n\r\n    const handleImage = (e) => {\r\n        setImage(e.target.files[0]);  // Set the new image file when selected\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:5000/post/${id}`);\r\n                console.log(response.data.post);\r\n                setCurrentImage(response.data.post.image);  // Set the current image path for display\r\n                setDescription(response.data.post.description);\r\n                setReference(response.data.post.reference);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [id]);  // Add `id` to the dependency array\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append('description', description);\r\n        formData.append('reference', reference);\r\n        \r\n        // If a new image was selected, append it to the form data\r\n        if (image) {\r\n            formData.append('postImage', image);\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post(`http://localhost:5000/edit/${id}`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            console.log(response.data);\r\n            // Optionally navigate to the updated post or posts list\r\n            navigate(`/post/${id}`);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type='text'\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    placeholder=\"Description\"\r\n                />\r\n                <input \r\n                    type='url'\r\n                    value={reference}\r\n                    onChange={(e) => setReference(e.target.value)}\r\n                    placeholder=\"Reference Link\"\r\n                />\r\n                {/* Show the current image if it exists */}\r\n                {currentImage && <img src={`http://localhost:5000/public/posts/${currentImage}`} alt=\"Current Post\" width=\"200\" />}\r\n                <input \r\n                    type='file'\r\n                    onChange={handleImage}\r\n                />\r\n                <button type='submit'>Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}